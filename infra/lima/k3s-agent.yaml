# Lima VM configuration for k3s agent/worker node
# This can be used to add worker nodes to the cluster

minimumLimaVersion: 1.1.0

base: template://_images/ubuntu-lts

# Mounts are disabled in this template, but can be enabled optionally.
mounts: []
# containerd is managed by k3s, not by Lima, so the values are set to false here.
containerd:
  system: false
  user: false

env:
  K3S_TOKEN: ${K3S_TOKEN}
  K3S_SERVER_TAILSCALE_IP: ${K3S_SERVER_TAILSCALE_IP}
  K3S_VPN_AUTH_KEY: ${K3S_VPN_AUTH_KEY}

# Provision script to install k3s agent
# Note: This requires the server to be running and the token to be available
provision:
  - mode: system
    script: |
      #!/bin/bash
      set -euo pipefail


      if [ -z "${K3S_VPN_AUTH_KEY:-}" ]; then
        echo "K3S_VPN_AUTH_KEY environment variable must be set before starting the Lima instance." >&2
        exit 1
      fi

      if [ -z "${K3S_SERVER_TAILSCALE_IP:-}" ]; then
        echo "K3S_SERVER_TAILSCALE_IP environment variable must be set before starting the Lima instance." >&2
        exit 1
      fi

      if [ -z "${K3S_TOKEN:-}" ]; then
        echo "K3S_TOKEN environment variable must be set before starting the Lima instance." >&2
        exit 1
      fi

      if ! command -v tailscale >/dev/null 2>&1; then
        curl -fsSL https://tailscale.com/install.sh | sh
      fi

      sudo tailscale up \
        --auth-key="${K3S_VPN_AUTH_KEY}" \
        --hostname="$(hostname)" \
        --ssh \
        --accept-routes

      # Wait for Tailscale to connect and get an IP address
      echo "Waiting for Tailscale to connect..."
      for i in {1..30}; do
        TS_IP=$(sudo tailscale ip -4 | head -n 1)
        if [ -n "${TS_IP}" ]; then
          echo "Tailscale connected with IP: ${TS_IP}"
          break
        fi
        echo "Attempt $i/30: Waiting for Tailscale connection..."
        sleep 2
      done

      if [ -z "${TS_IP}" ]; then
        echo "Failed to determine Tailscale IPv4 address after 60 seconds" >&2
        echo "Tailscale status:"
        sudo tailscale status || true
        exit 1
      fi

      VPN_AUTH_ARG="--vpn-auth=name=tailscale,joinKey=${K3S_VPN_AUTH_KEY}"

      INSTALL_K3S_EXEC="agent \
        ${VPN_AUTH_ARG} \
        --server=http://${K3S_SERVER_TAILSCALE_IP}:6443 \
        --token=${K3S_TOKEN} \
        --node-ip=${TS_IP} \
        --node-external-ip=${TS_IP} \
        --bind-address=${TS_IP}"

      curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="${INSTALL_K3S_EXEC}" sh -

      sudo systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target

probes:
  - description: "system to be ready"
    script: |
      #!/bin/bash
      which curl && which wget
